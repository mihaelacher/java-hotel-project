package Panels;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;

import Core.DBConnection;
import Core.MyModel;
import Helpers.BuildRoomTypesHelper;

public class RoomsPanel extends JPanel{
	
	Connection conn=null;
	PreparedStatement state=null;
	ResultSet result;
	int id=-1;

	// DEFINE ROOM OBJECTS
	
	// Define room panels
	JPanel roomsUpPanel = new JPanel();
	JPanel roomsMidPanel = new JPanel();
	JPanel roomsDownPanel = new JPanel();
	
	// Define room type labels
	JLabel roomNubmerLabel = new JLabel("Номер на стаята");
	JLabel roomTypeLabel = new JLabel("Тип на стаята");
	JLabel roomStatusLabel = new JLabel("Статус на стаята");
	
	// Define room fields
	JTextField roomNubmerTF = new JTextField();
	JComboBox<String> roomStatusCombo=new JComboBox<String>();
	JComboBox<String> roomTypeCombo=new JComboBox<String>();
	
	// Define room buttons
	JButton roomsAddBt=new JButton("Добавяне");
	JButton roomsDeleteBt=new JButton("Изтриване");
	JButton roomsEditBt=new JButton("Промяна");
	JButton roomsSearchBt=new JButton("Търсене по име");
	JButton roomsRefreshBt=new JButton("Обнови");
	
	// Define room table
	JTable table = new JTable();
	JScrollPane myScroll = new JScrollPane(table);
	
	public RoomsPanel()
	{	
		this.setLayout(new GridLayout(3,1));
		
		roomsUpPanel.setLayout(new GridLayout(6,2));
		
		roomsUpPanel.add(roomNubmerLabel);
		roomsUpPanel.add(roomNubmerTF);
		roomsUpPanel.add(roomTypeLabel);
		roomsUpPanel.add(roomTypeCombo);
		roomsUpPanel.add(roomStatusLabel);
		roomsUpPanel.add(roomStatusCombo);
		
		this.add(roomsUpPanel);
		
		roomsMidPanel.setLayout(new FlowLayout());
		
		roomsMidPanel.add(roomsAddBt);
		roomsMidPanel.add(roomsDeleteBt);
		roomsMidPanel.add(roomsEditBt);
		roomsMidPanel.add(roomsSearchBt);
		roomsMidPanel.add(roomsRefreshBt);
		
		this.add(roomsMidPanel);
		
		myScroll.setPreferredSize(new Dimension(350, 100));
		roomsDownPanel.add(myScroll);
		this.add(roomsDownPanel);
		
		refreshTable(table, "rooms");
	}
	
	public void refreshTable(JTable table, String tabDB) {
		conn = DBConnection.getConnection();
		
		try {
			state=conn.prepareStatement("select * from " + tabDB);
			result=state.executeQuery();
			table.setModel(new MyModel(result));
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void clearRoomsForm() {
		nameTF.setText("");
		priceTF.setText("");
	}
	
	class AddRoomAction implements ActionListener {

		@Override
		public void actionPerformed(ActionEvent e) {
			String sql="insert into rooms values(null, ?, ?, ?)";
			
			try {
				state=conn.prepareStatement(sql);
				state.setInt(1, Integer.parseInt(roomNubmerTF.getText()));
				state.setInt(2, roomTypeId);
				state.setInt(3, roomStatusId);
				refreshTable(table,"room_type");
				
				state.execute();
				//BuildRoomTypesHelper.clearRoomTypesForm(nameTF, priceTF);
				
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		}
		
	}
	
	
}

